{"version":3,"sources":["views/login/login.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/login/Login.module.css"],"names":["Login","dispatch","useDispatch","useState","email","setEmail","password","setPassword","autoComplete","onSubmit","e","preventDefault","logIn","className","s","form","label","input","type","name","value","onChange","target","button","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","module","exports"],"mappings":"0PA6DeA,EAxDD,WACZ,IAAMC,EAAWC,cADC,EAEQC,mBAAS,IAFjB,mBAEXC,EAFW,KAEJC,EAFI,OAGcF,mBAAS,IAHvB,mBAGXG,EAHW,KAGDC,EAHC,KAsBlB,OACE,gCACE,uCACA,uBAAMC,aAAa,MAAMC,SAVR,SAAAC,GACnBA,EAAEC,iBACFV,EAASW,YAAM,CAAER,QAAOE,cACxBD,EAAS,IACTE,EAAY,KAMuCM,UAAWC,IAAEC,KAA9D,UACE,wBAAOF,UAAWC,IAAEE,MAApB,UACG,IADH,QAGE,uBACEH,UAAWC,IAAEG,MACbC,KAAK,QACLC,KAAK,QACLC,MAAOhB,EACPiB,SA7BgB,SAAAX,GAAM,IACtBU,EAAUV,EAAEY,OAAZF,MACRf,EAASe,SA8BL,wBAAOP,UAAWC,IAAEE,MAApB,UACG,IADH,WAGE,uBACEH,UAAWC,IAAEG,MACbC,KAAK,WACLC,KAAK,WACLC,MAAOd,EACPe,SAnCmB,SAAAX,GAAM,IACzBU,EAAUV,EAAEY,OAAZF,MACRb,EAAYa,SAoCR,wBAAQF,KAAK,SAASL,UAAWC,IAAES,OAAnC,4B,8ECjDO,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGjB,QAETM,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF,K,mBIJtGC,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS","file":"static/js/5.b58a587b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logIn } from '../../redux/auth/auth-operations';\r\nimport s from './Login.module.css';\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChangeEmail = e => {\r\n    const { value } = e.target;\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleChangePassword = e => {\r\n    const { value } = e.target;\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <form autoComplete=\"off\" onSubmit={handleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          {' '}\r\n          Email\r\n          <input\r\n            className={s.input}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChangeEmail}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          {' '}\r\n          Password\r\n          <input\r\n            className={s.input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChangePassword}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__3K14J\",\"input\":\"Login_input__2bSDi\",\"label\":\"Login_label__6QPZ9\",\"button\":\"Login_button__3zO1R\"};"],"sourceRoot":""}